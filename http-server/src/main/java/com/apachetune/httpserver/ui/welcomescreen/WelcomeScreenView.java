package com.apachetune.httpserver.ui.welcomescreen;

import chrriis.common.WebServer;
import chrriis.dj.nativeswing.swtimpl.components.JWebBrowser;
import chrriis.dj.nativeswing.swtimpl.components.WebBrowserAdapter;
import chrriis.dj.nativeswing.swtimpl.components.WebBrowserCommandEvent;
import com.apachetune.httpserver.Constants;

import javax.swing.*;
import java.awt.*;

import static com.apachetune.httpserver.Constants.*;

/**
 * FIXDOC
 *
 * @author <a href="mailto:progmonster@gmail.com">Aleksey V. Katorgin</a>
 *         Created Date: 18.03.2010
 */
public class WelcomeScreenView {
    private final WelcomeScreenWorkItem workItem;

    private JPanel mainPanel;

    public WelcomeScreenView(final WelcomeScreenWorkItem workItem) {
        this.workItem = workItem;
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    private void createUIComponents() {
        mainPanel = new JPanel();

        mainPanel.setLayout(new GridLayout());

        JWebBrowser browser = new JWebBrowser();

        browser.setBarsVisible(false);
        browser.setDefaultPopupMenuRegistered(false);

        browser.addWebBrowserListener(new WebBrowserAdapter() {
            public void commandReceived(final WebBrowserCommandEvent e) {
                String cmd = e.getCommand();

                if (cmd.equals("openServer")) {
                    doOpenServer();
                } else if (cmd.equals("searchServer")) {
                    doSearchServer();
                } else {
                    // TODO Make it as a service.
                    throw new RuntimeException("Unknown command [command = '" + cmd + "']");
                }
            }
        }
        );

        mainPanel.add(browser);

        String startPageUrl = WebServer.getDefaultWebServer().getClassPathResourceURL(getClass().getName(),
                                                                                      "index.html"
        );

        browser.navigate(startPageUrl);
    }

    private void doSearchServer() {
        workItem.raiseEvent(SERVER_SEARCH_FOR_HTTP_SERVER_EVENT);
    }

    private void doOpenServer() {
        workItem.raiseEvent(SERVER_SELECT_HTTP_SERVER_EVENT);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
